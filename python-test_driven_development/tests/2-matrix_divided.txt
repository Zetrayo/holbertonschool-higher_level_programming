This is a doctest file for the function `matrix_divided`.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test 1: Valid matrix with integer division
>>> matrix_divided([[4, 8], [16, 32]], 2)
[[2.0, 4.0], [8.0, 16.0]]

# Test 2: Valid matrix with float division
>>> matrix_divided([[5.0, 10.0], [15.0, 20.0]], 5)
[[1.0, 2.0], [3.0, 4.0]]

# Test 3: Matrix with negative numbers and division by a positive number
>>> matrix_divided([[-4, -8], [-12, -16]], 4)
[[-1.0, -2.0], [-3.0, -4.0]]

# Test 4: Matrix with mixed integers and floats
>>> matrix_divided([[1, 2.5], [3, 4.75]], 2)
[[0.5, 1.25], [1.5, 2.38]]

# Test 5: Non-numeric matrix elements (TypeError expected)
>>> matrix_divided([[1, "2"], [3, 4]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 6: Rows of different sizes (TypeError expected)
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test 7: Non-numeric divisor (TypeError expected)
>>> matrix_divided([[1, 2], [3, 4]], "2")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test 8: Division by zero (ZeroDivisionError expected)
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test 9: Matrix with single element
>>> matrix_divided([[9]], 3)
[[3.0]]
